[Error]
enum SimpleError {
  "BadArgument",
  "UnexpectedError",
};

[Error]
interface ComplexError {
   ReallyBadArgument(i32 code);
   UnexpectedErrorWithReason(string reason);
};

interface RustGetters {
  constructor();
  [Throws=SimpleError]
  boolean get_bool(ForeignGetters callback, boolean v, boolean argument_two);
  [Throws=SimpleError]
  string get_string(ForeignGetters callback, string v, boolean arg2);
  [Throws=ComplexError]
  string? get_option(ForeignGetters callback, string? v, boolean arg2);
  [Throws=SimpleError]
  sequence<i32> get_list(ForeignGetters callback, sequence<i32> v, boolean arg2);
  [Throws=SimpleError]
  string? get_string_optional_callback(ForeignGetters? callback, string v, boolean arg2);
  [Throws=SimpleError]
  void get_nothing(ForeignGetters callback, string v);
};

callback interface ForeignGetters {
  [Throws=SimpleError]
  boolean get_bool(boolean v, boolean argument_two);
  [Throws=SimpleError]
  string get_string(string v, boolean arg2);
  [Throws=ComplexError]
  string? get_option(string? v, boolean arg2);
  [Throws=SimpleError]
  sequence<i32> get_list(sequence<i32> v, boolean arg2);
  [Throws=SimpleError]
  void get_nothing(string v);
};

namespace callbacks { };